{
  "version": 3,
  "sources": [
    "node_modules/grunt-browserify/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "test/router/test.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "var router = require('router');\n\nQUnit.module('API');\n\nQUnit.test(\"module\", 2, function(assert){\n    assert.ok(typeof router !== 'undefined', \"The module exports something\");\n    assert.ok(typeof router === 'function',  \"The module exports a function\");\n});\n\n\nQUnit.test(\"factory\", 4, function(assert){\n\n    let routing = router();\n\n    assert.ok(typeof routing === 'object',            \"the router definition is an object\");\n    assert.ok(typeof routing.add === 'function',      \"the router has got the method add\");\n    assert.ok(typeof routing.resolve === 'function',  \"the router has got the method resolve\");\n    assert.notDeepEqual(routing, router(),            \"the router is a factory and creates an new router instance\");\n});\n\n\nQUnit.module('routes');\n\nQUnit.test(\"config\", 6, function(assert){\n\n    assert.throws( () => router([{}]),               TypeError, \"Empty route\");\n    assert.throws( () => router([{'foo' : 'bar'}]),  TypeError, \"Wrong route\");\n    assert.throws( () => router([{'url' : '/foo'}]), TypeError, \"Missing handlers\");\n    assert.throws( () => router([{'url' : '/foo', 'handlers' : true }]), TypeError, \"Wrong handlers\");\n    assert.throws( () => router([{'url' : '/foo', 'handlers' : [] }]), TypeError, \"No handlers\");\n\n    let routing = router([{\n        'url' : '/foo',\n        'handlers' : () => {}\n    }]);\n\n    assert.ok(typeof routing === 'object', \"the router is an object\");\n});\n\nQUnit.test(\"resolve one\", 3, function(assert){\n\n    var loaded = false;\n    let handlers   = () => loaded = true;\n\n\n    let routing = router([{\n        url : '/foo',\n        handlers\n    }]);\n\n    assert.ok(typeof routing === 'object', \"the router is an object\");\n    assert.equal(loaded, false, 'the route is not resolved');\n\n    routing.resolve('/foo');\n\n    assert.equal(loaded, true, 'the route is now resolved');\n});\n\n\nQUnit.test(\"resolve a stack with patterns\", 11, function(assert){\n\n    var route = false;\n    let route1   = () => route = 1;\n    let route2   = () => route = 2;\n    let route3   = () => route = 3;\n\n    let routing = router([{\n        url : '/foo',\n        handlers : route1\n    }, {\n        url : '/bar/*',\n        handlers : route2\n    }, {\n        url : '/baz/:id/baz',\n        handlers : route3\n    }]);\n\n    assert.ok(typeof routing === 'object', \"the router is an object\");\n    assert.equal(route, false, 'the route is not resolved');\n\n    route = false;\n    routing.resolve('/moo');\n    assert.equal(route, false, '/moo : no route is resolved');\n\n    route = false;\n    routing.resolve('/foo');\n    assert.equal(route, 1, '/foo : route 1 is resolved');\n\n    route = false;\n    routing.resolve('/foo/moo');\n    assert.equal(route, false, '/foo/moo : no  route resolved');\n\n    route = false;\n    routing.resolve('/bar');\n    assert.equal(route, false, '/bar : no route resolved');\n\n    route = false;\n    routing.resolve('/bar/bor');\n    assert.equal(route, 2, 'the route 2 is resolved');\n\n    route = false;\n    routing.resolve('/bari/bor');\n    assert.equal(route, false, '/bari/bor : no route resolved');\n\n    route = false;\n    routing.resolve('/baz/123/baz');\n    assert.equal(route, 3, '/baz/123/baz : route 3 is resolved');\n\n    route = false;\n    routing.resolve('/baz/foo/baz');\n    assert.equal(route, 3, '/baz/foo/baz : route 3 is resolved');\n\n    route = false;\n    routing.resolve('/bazfoo/123/baz');\n    assert.equal(route, false, '/bazfoo/123/baz : no route resolved');\n});\n\nQUnit.test(\"resolve once\", 5, function(assert){\n\n    var loaded = 0;\n    let handlers   = () => loaded++;\n\n    let routing = router([{\n        url : '/foo',\n        handlers,\n        once : true\n    }]);\n\n    assert.ok(typeof routing === 'object', \"the router is an object\");\n    assert.equal(loaded, 0, 'the route is not resolved');\n\n    routing.resolve('/moo');\n    assert.equal(loaded, 0, 'the route is not yet resolved');\n\n    routing.resolve('/foo');\n    assert.equal(loaded, 1, 'the route is resolved');\n\n    routing.resolve('/foo');\n    assert.equal(loaded, 1, 'the route is not resloved again');\n});\n\n"
  ]
}